var search_data = {
    'index': {
        'searchIndex': ["assetsmanager","assetsmanager\\composer","assetsmanager\\composer\\autoload","assetsmanager\\composer\\installer","assetsmanager\\composer\\util","assetsmanager\\config","assetsmanager\\package","assetsmanager\\package\\presetadapter","assetsmanager\\composer\\assetsmanagerplugin","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator","assetsmanager\\composer\\autoload\\assetsautoloadgenerator","assetsmanager\\composer\\autoload\\dumpautoloadeventhandler","assetsmanager\\composer\\dispatch","assetsmanager\\composer\\installer\\assetsinstaller","assetsmanager\\composer\\installer\\assetsinstallerinterface","assetsmanager\\composer\\util\\filesystem","assetsmanager\\config","assetsmanager\\config\\configuratorinterface","assetsmanager\\config\\defaultconfig","assetsmanager\\error","assetsmanager\\loader","assetsmanager\\package\\abstractassetspackage","assetsmanager\\package\\assetspackage","assetsmanager\\package\\assetspackageinterface","assetsmanager\\package\\assetspresetinterface","assetsmanager\\package\\preset","assetsmanager\\package\\presetadapterinterface","assetsmanager\\package\\presetadapter\\css","assetsmanager\\package\\presetadapter\\javascript","assetsmanager\\package\\presetadapter\\requirement","assetsmanager\\composer\\assetsmanagerplugin::activate","assetsmanager\\composer\\assetsmanagerplugin::getsubscribedevents","assetsmanager\\composer\\assetsmanagerplugin::onprefiledownload","assetsmanager\\composer\\assetsmanagerplugin::oncommand","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::getinstance","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::__destruct","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::getassetsinstaller","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::readjsondatabase","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::writejsondatabase","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::setregistry","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::getregistry","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::setgenerator","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::registerpackage","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::unregisterpackage","assetsmanager\\composer\\autoload\\abstractassetsautoloadgenerator::generate","assetsmanager\\composer\\autoload\\assetsautoloadgenerator::generate","assetsmanager\\composer\\autoload\\dumpautoloadeventhandler::__construct","assetsmanager\\composer\\autoload\\dumpautoloadeventhandler::generate","assetsmanager\\composer\\autoload\\dumpautoloadeventhandler::getfulldb","assetsmanager\\composer\\dispatch::__construct","assetsmanager\\composer\\dispatch::getcomposer","assetsmanager\\composer\\dispatch::getio","assetsmanager\\composer\\dispatch::validateconfig","assetsmanager\\composer\\dispatch::validateinstaller","assetsmanager\\composer\\dispatch::validateautoloadgenerator","assetsmanager\\composer\\dispatch::supports","assetsmanager\\composer\\dispatch::isinstalled","assetsmanager\\composer\\dispatch::install","assetsmanager\\composer\\dispatch::update","assetsmanager\\composer\\dispatch::uninstall","assetsmanager\\composer\\dispatch::getinstallpath","assetsmanager\\composer\\dispatch::setregistry","assetsmanager\\composer\\dispatch::getregistry","assetsmanager\\composer\\dispatch::setgenerator","assetsmanager\\composer\\dispatch::getgenerator","assetsmanager\\composer\\dispatch::registerpackage","assetsmanager\\composer\\dispatch::unregisterpackage","assetsmanager\\composer\\installer\\assetsinstaller::__construct","assetsmanager\\composer\\installer\\assetsinstaller::supports","assetsmanager\\composer\\installer\\assetsinstaller::isinstalled","assetsmanager\\composer\\installer\\assetsinstaller::install","assetsmanager\\composer\\installer\\assetsinstaller::update","assetsmanager\\composer\\installer\\assetsinstaller::uninstall","assetsmanager\\composer\\installer\\assetsinstaller::getio","assetsmanager\\composer\\installer\\assetsinstaller::getappbasepath","assetsmanager\\composer\\installer\\assetsinstaller::getvendordir","assetsmanager\\composer\\installer\\assetsinstaller::getassetsdir","assetsmanager\\composer\\installer\\assetsinstaller::getassetsvendordir","assetsmanager\\composer\\installer\\assetsinstaller::getdocumentroot","assetsmanager\\composer\\installer\\assetsinstaller::getassetsdbfilename","assetsmanager\\composer\\installer\\assetsinstaller::getassetsinstallpath","assetsmanager\\composer\\installer\\assetsinstaller::parsecomposerextra","assetsmanager\\composer\\installer\\assetsinstaller::guessconfigurationentry","assetsmanager\\composer\\installer\\assetsinstaller::ispackagecontains","assetsmanager\\composer\\installer\\assetsinstallerinterface::parsecomposerextra","assetsmanager\\composer\\util\\filesystem::copy","assetsmanager\\config::mustload","assetsmanager\\config::load","assetsmanager\\config::overload","assetsmanager\\config::set","assetsmanager\\config::get","assetsmanager\\config::getdefault","assetsmanager\\config::getinternal","assetsmanager\\config::getregistry","assetsmanager\\config\\configuratorinterface::getdefaults","assetsmanager\\config\\defaultconfig::getdefaults","assetsmanager\\error::thrower","assetsmanager\\loader::getinstance","assetsmanager\\loader::__construct","assetsmanager\\loader::init","assetsmanager\\loader::setdocumentroot","assetsmanager\\loader::getdocumentroot","assetsmanager\\loader::setassetsdb","assetsmanager\\loader::getassetsdb","assetsmanager\\loader::getassetswebpath","assetsmanager\\loader::getpackageassetspath","assetsmanager\\loader::getpackageassetswebpath","assetsmanager\\loader::haspackage","assetsmanager\\loader::getpackage","assetsmanager\\loader::validatepresets","assetsmanager\\loader::haspreset","assetsmanager\\loader::getpreset","assetsmanager\\loader::getassets","assetsmanager\\loader::findpreset","assetsmanager\\loader::findpackage","assetsmanager\\loader::buildwebpath","assetsmanager\\loader::find","assetsmanager\\loader::findinpackage","assetsmanager\\loader::findinpath","assetsmanager\\loader::isurl","assetsmanager\\package\\abstractassetspackage::__construct","assetsmanager\\package\\abstractassetspackage::setrootdirectory","assetsmanager\\package\\abstractassetspackage::getrootdirectory","assetsmanager\\package\\abstractassetspackage::setassetsdirectory","assetsmanager\\package\\abstractassetspackage::getassetsdirectory","assetsmanager\\package\\abstractassetspackage::setvendordirectory","assetsmanager\\package\\abstractassetspackage::getvendordirectory","assetsmanager\\package\\abstractassetspackage::setassetsvendordirectory","assetsmanager\\package\\abstractassetspackage::getassetsvendordirectory","assetsmanager\\package\\abstractassetspackage::getfullpath","assetsmanager\\package\\abstractassetspackage::getassetsrealpath","assetsmanager\\package\\abstractassetspackage::getvendorrealpath","assetsmanager\\package\\abstractassetspackage::getassetsvendorrealpath","assetsmanager\\package\\assetspackage::__construct","assetsmanager\\package\\assetspackage::createfromassetsloader","assetsmanager\\package\\assetspackage::reset","assetsmanager\\package\\assetspackage::__clone","assetsmanager\\package\\assetspackage::setname","assetsmanager\\package\\assetspackage::getname","assetsmanager\\package\\assetspackage::setversion","assetsmanager\\package\\assetspackage::getversion","assetsmanager\\package\\assetspackage::setrelativepath","assetsmanager\\package\\assetspackage::getrelativepath","assetsmanager\\package\\assetspackage::setassetspath","assetsmanager\\package\\assetspackage::getassetspath","assetsmanager\\package\\assetspackage::setassetspresets","assetsmanager\\package\\assetspackage::addassetspreset","assetsmanager\\package\\assetspackage::getassetspresets","assetsmanager\\package\\assetspackage::getassetspreset","assetsmanager\\package\\assetspackage::getrelativefullpath","assetsmanager\\package\\assetspackage::getarray","assetsmanager\\package\\assetspackage::loadfromarray","assetsmanager\\package\\assetspackage::findinpackage","assetsmanager\\package\\assetspackageinterface::__construct","assetsmanager\\package\\assetspackageinterface::createfromassetsloader","assetsmanager\\package\\assetspackageinterface::loadfromarray","assetsmanager\\package\\assetspresetinterface::__construct","assetsmanager\\package\\assetspresetinterface::getstatements","assetsmanager\\package\\assetspresetinterface::getstatement","assetsmanager\\package\\assetspresetinterface::__tohtml","assetsmanager\\package\\preset::__construct","assetsmanager\\package\\preset::findinpackage","assetsmanager\\package\\preset::load","assetsmanager\\package\\preset::__tohtml","assetsmanager\\package\\preset::setname","assetsmanager\\package\\preset::getname","assetsmanager\\package\\preset::setdata","assetsmanager\\package\\preset::getdata","assetsmanager\\package\\preset::setpackage","assetsmanager\\package\\preset::getpackage","assetsmanager\\package\\preset::getstatements","assetsmanager\\package\\preset::getstatement","assetsmanager\\package\\preset::getorganizedstatements","assetsmanager\\package\\preset::getorderedstatements","assetsmanager\\package\\presetadapterinterface::__construct","assetsmanager\\package\\presetadapterinterface::getdata","assetsmanager\\package\\presetadapterinterface::parse","assetsmanager\\package\\presetadapterinterface::__tostring","assetsmanager\\package\\presetadapterinterface::__tohtml","assetsmanager\\package\\presetadapter\\css::__construct","assetsmanager\\package\\presetadapter\\css::getdata","assetsmanager\\package\\presetadapter\\css::parse","assetsmanager\\package\\presetadapter\\css::__tostring","assetsmanager\\package\\presetadapter\\css::__tohtml","assetsmanager\\package\\presetadapter\\javascript::__construct","assetsmanager\\package\\presetadapter\\javascript::getdata","assetsmanager\\package\\presetadapter\\javascript::parse","assetsmanager\\package\\presetadapter\\javascript::__tostring","assetsmanager\\package\\presetadapter\\javascript::__tohtml","assetsmanager\\package\\presetadapter\\requirement::__construct","assetsmanager\\package\\presetadapter\\requirement::getdata","assetsmanager\\package\\presetadapter\\requirement::parse","assetsmanager\\package\\presetadapter\\requirement::__tostring","assetsmanager\\package\\presetadapter\\requirement::__tohtml"],
        'info': [["AssetsManager","","AssetsManager.html","","",3],["AssetsManager\\Composer","","AssetsManager\/Composer.html","","",3],["AssetsManager\\Composer\\Autoload","","AssetsManager\/Composer\/Autoload.html","","",3],["AssetsManager\\Composer\\Installer","","AssetsManager\/Composer\/Installer.html","","",3],["AssetsManager\\Composer\\Util","","AssetsManager\/Composer\/Util.html","","",3],["AssetsManager\\Config","","AssetsManager\/Config.html","","",3],["AssetsManager\\Package","","AssetsManager\/Package.html","","",3],["AssetsManager\\Package\\PresetAdapter","","AssetsManager\/Package\/PresetAdapter.html","","",3],["AssetsManagerPlugin","AssetsManager\\Composer","AssetsManager\/Composer\/AssetsManagerPlugin.html","","",1],["AbstractAssetsAutoloadGenerator","AssetsManager\\Composer\\Autoload","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html","","",1],["AssetsAutoloadGenerator","AssetsManager\\Composer\\Autoload","AssetsManager\/Composer\/Autoload\/AssetsAutoloadGenerator.html"," < AbstractAssetsAutoloadGenerator","",1],["DumpAutoloadEventHandler","AssetsManager\\Composer\\Autoload","AssetsManager\/Composer\/Autoload\/DumpAutoloadEventHandler.html"," < AutoloadGenerator","",1],["Dispatch","AssetsManager\\Composer","AssetsManager\/Composer\/Dispatch.html","","",1],["AssetsInstaller","AssetsManager\\Composer\\Installer","AssetsManager\/Composer\/Installer\/AssetsInstaller.html"," < LibraryInstaller","",1],["AssetsInstallerInterface","AssetsManager\\Composer\\Installer","AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html","","",1],["Filesystem","AssetsManager\\Composer\\Util","AssetsManager\/Composer\/Util\/Filesystem.html"," < Filesystem","This class just completes the default `Composer\\Util\\Filesystem`",1],["Config","AssetsManager","AssetsManager\/Config.html","","",1],["ConfiguratorInterface","AssetsManager\\Config","AssetsManager\/Config\/ConfiguratorInterface.html","","",1],["DefaultConfig","AssetsManager\\Config","AssetsManager\/Config\/DefaultConfig.html","","",1],["Error","AssetsManager","AssetsManager\/Error.html","","",1],["Loader","AssetsManager","AssetsManager\/Loader.html"," < AbstractAssetsPackage","Class to manage assets paths",1],["AbstractAssetsPackage","AssetsManager\\Package","AssetsManager\/Package\/AbstractAssetsPackage.html","","Class to manage assets paths",1],["AssetsPackage","AssetsManager\\Package","AssetsManager\/Package\/AssetsPackage.html"," < AbstractAssetsPackage","",1],["AssetsPackageInterface","AssetsManager\\Package","AssetsManager\/Package\/AssetsPackageInterface.html","","AssetsPackageInterface",1],["AssetsPresetInterface","AssetsManager\\Package","AssetsManager\/Package\/AssetsPresetInterface.html","","AssetsPresetInterface",1],["Preset","AssetsManager\\Package","AssetsManager\/Package\/Preset.html","","Preset",1],["PresetAdapterInterface","AssetsManager\\Package","AssetsManager\/Package\/PresetAdapterInterface.html","","PresetAdapterInterface",1],["Css","AssetsManager\\Package\\PresetAdapter","AssetsManager\/Package\/PresetAdapter\/Css.html","","",1],["Javascript","AssetsManager\\Package\\PresetAdapter","AssetsManager\/Package\/PresetAdapter\/Javascript.html","","",1],["Requirement","AssetsManager\\Package\\PresetAdapter","AssetsManager\/Package\/PresetAdapter\/Requirement.html","","",1],["AssetsManagerPlugin::activate","AssetsManager\\Composer\\AssetsManagerPlugin","AssetsManager\/Composer\/AssetsManagerPlugin.html#method_activate","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, <abbr title=\"Composer\\IO\\IOInterface\">IOInterface<\/abbr> $io)","Add the `\\AssetsManager\\Composer\\Dispatch` installer",2],["AssetsManagerPlugin::getSubscribedEvents","AssetsManager\\Composer\\AssetsManagerPlugin","AssetsManager\/Composer\/AssetsManagerPlugin.html#method_getSubscribedEvents","()","Composer events plugin's subscription",2],["AssetsManagerPlugin::onPreFileDownload","AssetsManager\\Composer\\AssetsManagerPlugin","AssetsManager\/Composer\/AssetsManagerPlugin.html#method_onPreFileDownload","(<abbr title=\"Composer\\Plugin\\PreFileDownloadEvent\">PreFileDownloadEvent<\/abbr> $event)","Pre file download event dispatcher",2],["AssetsManagerPlugin::onCommand","AssetsManager\\Composer\\AssetsManagerPlugin","AssetsManager\/Composer\/AssetsManagerPlugin.html#method_onCommand","(<abbr title=\"Composer\\Plugin\\CommandEvent\">CommandEvent<\/abbr> $event)","Command event dispatcher",2],["AbstractAssetsAutoloadGenerator::getInstance","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_getInstance","(<a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Get a singleton instance",2],["AbstractAssetsAutoloadGenerator::__destruct","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method___destruct","()","Load the assets database file generation",2],["AbstractAssetsAutoloadGenerator::getAssetsInstaller","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_getAssetsInstaller","()","",2],["AbstractAssetsAutoloadGenerator::readJsonDatabase","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_readJsonDatabase","()","Reads the assets database from JSON file",2],["AbstractAssetsAutoloadGenerator::writeJsonDatabase","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_writeJsonDatabase","(array $full_db)","Writes the assets database in a JSON file",2],["AbstractAssetsAutoloadGenerator::setRegistry","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_setRegistry","(array $assets_db, <a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Set the current assets database",2],["AbstractAssetsAutoloadGenerator::getRegistry","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_getRegistry","(<a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Get the current assets database",2],["AbstractAssetsAutoloadGenerator::setGenerator","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_setGenerator","(callable $callable)","Set the generator called at object destruction",2],["AbstractAssetsAutoloadGenerator::registerPackage","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_registerPackage","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, string $target, <a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Add a new installed package in the Assets database",2],["AbstractAssetsAutoloadGenerator::unregisterPackage","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_unregisterPackage","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, <a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Remove an uninstalled package from the Assets database",2],["AbstractAssetsAutoloadGenerator::generate","AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AbstractAssetsAutoloadGenerator.html#method_generate","()","This must generate the Assets database JSON file",2],["AssetsAutoloadGenerator::generate","AssetsManager\\Composer\\Autoload\\AssetsAutoloadGenerator","AssetsManager\/Composer\/Autoload\/AssetsAutoloadGenerator.html#method_generate","()","This must generate the Assets database JSON file",2],["DumpAutoloadEventHandler::__construct","AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler","AssetsManager\/Composer\/Autoload\/DumpAutoloadEventHandler.html#method___construct","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, <abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer)","",2],["DumpAutoloadEventHandler::generate","AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler","AssetsManager\/Composer\/Autoload\/DumpAutoloadEventHandler.html#method_generate","()","{@inheritDoc}",2],["DumpAutoloadEventHandler::getFullDb","AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler","AssetsManager\/Composer\/Autoload\/DumpAutoloadEventHandler.html#method_getFullDb","()","Build the complete database array",2],["Dispatch::__construct","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method___construct","(<abbr title=\"Composer\\IO\\IOInterface\">IOInterface<\/abbr> $io, <abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, $type = &#039;library&#039;)","Initializes installer: creation of all required objects",2],["Dispatch::getComposer","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_getComposer","()","",2],["Dispatch::getIo","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_getIo","()","",2],["Dispatch::validateConfig","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_validateConfig","(string $config_class)","Validating the configuration class to use",2],["Dispatch::validateInstaller","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_validateInstaller","(string $installer_class)","Validating the installer class to use",2],["Dispatch::validateAutoloadGenerator","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_validateAutoloadGenerator","(string $generator_class)","Validating the autoload generator class to use",2],["Dispatch::supports","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_supports","($packageType)","{@inheritDoc}",2],["Dispatch::isInstalled","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_isInstalled","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","{@inheritDoc}",2],["Dispatch::install","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_install","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","{@inheritDoc}",2],["Dispatch::update","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_update","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $initial, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $target)","{@inheritDoc}",2],["Dispatch::uninstall","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_uninstall","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","{@inheritDoc}",2],["Dispatch::getInstallPath","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_getInstallPath","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","{@inheritDoc}",2],["Dispatch::setRegistry","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_setRegistry","(array $assets_db, <a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Set the current assets database",2],["Dispatch::getRegistry","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_getRegistry","(<a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Get the current assets database",2],["Dispatch::setGenerator","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_setGenerator","(callable $callable)","Set the generator called at object destruction",2],["Dispatch::getGenerator","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_getGenerator","()","Get the generator called at object destruction",2],["Dispatch::registerPackage","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_registerPackage","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, string $target, <a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Add a new installed package in the Assets database",2],["Dispatch::unregisterPackage","AssetsManager\\Composer\\Dispatch","AssetsManager\/Composer\/Dispatch.html#method_unregisterPackage","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, <a href=\"AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html\"><abbr title=\"AssetsManager\\Composer\\Installer\\AssetsInstallerInterface\">AssetsInstallerInterface<\/abbr><\/a> $installer = null)","Remove an uninstalled package from the Assets database",2],["AssetsInstaller::__construct","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method___construct","(<abbr title=\"Composer\\IO\\IOInterface\">IOInterface<\/abbr> $io, <abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, $type = &#039;library&#039;)","Initializes installer: creation of `assets-dir` directory",2],["AssetsInstaller::supports","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_supports","($packageType)","{@inheritDoc}",2],["AssetsInstaller::isInstalled","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_isInstalled","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","{@inheritDoc}",2],["AssetsInstaller::install","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_install","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","{@inheritDoc}",2],["AssetsInstaller::update","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_update","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $initial, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $target)","{@inheritDoc}",2],["AssetsInstaller::uninstall","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_uninstall","(<abbr title=\"Composer\\Repository\\InstalledRepositoryInterface\">InstalledRepositoryInterface<\/abbr> $repo, <abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","{@inheritDoc}",2],["AssetsInstaller::getIo","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getIo","()","",2],["AssetsInstaller::getAppBasePath","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getAppBasePath","()","",2],["AssetsInstaller::getVendorDir","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getVendorDir","()","",2],["AssetsInstaller::getAssetsDir","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getAssetsDir","()","",2],["AssetsInstaller::getAssetsVendorDir","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getAssetsVendorDir","()","",2],["AssetsInstaller::getDocumentRoot","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getDocumentRoot","()","",2],["AssetsInstaller::getAssetsDbFilename","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getAssetsDbFilename","()","",2],["AssetsInstaller::getAssetsInstallPath","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_getAssetsInstallPath","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package)","",2],["AssetsInstaller::parseComposerExtra","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_parseComposerExtra","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, string $package_dir)","Parse the `composer.json` \"extra\" block of a package",2],["AssetsInstaller::guessConfigurationEntry","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_guessConfigurationEntry","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, string $config_entry)","Search a configuration value in a package's config",2],["AssetsInstaller::isPackageContains","AssetsManager\\Composer\\Installer\\AssetsInstaller","AssetsManager\/Composer\/Installer\/AssetsInstaller.html#method_isPackageContains","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, string $type, string $package_extra = null)","Check if a package seems to contain some `$type` files",2],["AssetsInstallerInterface::parseComposerExtra","AssetsManager\\Composer\\Installer\\AssetsInstallerInterface","AssetsManager\/Composer\/Installer\/AssetsInstallerInterface.html#method_parseComposerExtra","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, string $package_dir)","Parse the `composer.json` \"extra\" block of a package",2],["Filesystem::copy","AssetsManager\\Composer\\Util\\Filesystem","AssetsManager\/Composer\/Util\/Filesystem.html#method_copy","($source, $target)","Exact same code as `copyThenRemove()` method but without",2],["Config::mustLoad","AssetsManager\\Config","AssetsManager\/Config.html#method_mustLoad","()","Check if the configurator is not yet loaded",2],["Config::load","AssetsManager\\Config","AssetsManager\/Config.html#method_load","(string $class_name = null, bool $safe = false)","Load a config object",2],["Config::overload","AssetsManager\\Config","AssetsManager\/Config.html#method_overload","(array $settings)","Overload a config registry",2],["Config::set","AssetsManager\\Config","AssetsManager\/Config.html#method_set","(string $name, mixed $value)","",2],["Config::get","AssetsManager\\Config","AssetsManager\/Config.html#method_get","(string $name, mixed $default = null)","",2],["Config::getDefault","AssetsManager\\Config","AssetsManager\/Config.html#method_getDefault","(string $name)","",2],["Config::getInternal","AssetsManager\\Config","AssetsManager\/Config.html#method_getInternal","(string $name)","",2],["Config::getRegistry","AssetsManager\\Config","AssetsManager\/Config.html#method_getRegistry","()","",2],["ConfiguratorInterface::getDefaults","AssetsManager\\Config\\ConfiguratorInterface","AssetsManager\/Config\/ConfiguratorInterface.html#method_getDefaults","()","",2],["DefaultConfig::getDefaults","AssetsManager\\Config\\DefaultConfig","AssetsManager\/Config\/DefaultConfig.html#method_getDefaults","()","",2],["Error::thrower","AssetsManager\\Error","AssetsManager\/Error.html#method_thrower","($str, $throw = &#039;\\\\Exception&#039;, $class = null, $method = null, $line = null, $file = null)","",2],["Loader::getInstance","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getInstance","(string $root_dir = null, string $assets_dir = null, string $document_root = null, int $conflict_flag = self::PRESETS_CONFLICT)","Loader static instance constructor",2],["Loader::__construct","AssetsManager\\Loader","AssetsManager\/Loader.html#method___construct","(string $root_dir = null, string $assets_dir = null, string $document_root = null, int $conflict_flag = self::PRESETS_CONFLICT)","Loader protected constructor, use the class as a Singleton",2],["Loader::init","AssetsManager\\Loader","AssetsManager\/Loader.html#method_init","(string $root_dir = null, string $assets_dir = null, string $document_root = null)","",2],["Loader::setDocumentRoot","AssetsManager\\Loader","AssetsManager\/Loader.html#method_setDocumentRoot","(string $path)","Set the document root directory",2],["Loader::getDocumentRoot","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getDocumentRoot","()","Get the document root directory",2],["Loader::setAssetsDb","AssetsManager\\Loader","AssetsManager\/Loader.html#method_setAssetsDb","(array $db)","Set the package's assets database",2],["Loader::getAssetsDb","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getAssetsDb","()","Get the package's assets database",2],["Loader::getAssetsWebPath","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getAssetsWebPath","()","Get the web path for assets",2],["Loader::getPackageAssetsPath","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getPackageAssetsPath","(string $package_name)","Get the assets full path for a specific package",2],["Loader::getPackageAssetsWebPath","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getPackageAssetsWebPath","(string $package_name)","Get the web path for assets of a specific package",2],["Loader::hasPackage","AssetsManager\\Loader","AssetsManager\/Loader.html#method_hasPackage","(string $package_name)","Test if a package exists",2],["Loader::getPackage","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getPackage","(string $package_name)","Get a package instance",2],["Loader::validatePresets","AssetsManager\\Loader","AssetsManager\/Loader.html#method_validatePresets","()","Load and validate all packages presets in one table",2],["Loader::hasPreset","AssetsManager\\Loader","AssetsManager\/Loader.html#method_hasPreset","(string $preset_name)","Test if a preset exists",2],["Loader::getPreset","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getPreset","(string $preset_name)","Get a preset instance",2],["Loader::getAssets","AssetsManager\\Loader","AssetsManager\/Loader.html#method_getAssets","()","Get the package's assets database",2],["Loader::findPreset","AssetsManager\\Loader","AssetsManager\/Loader.html#method_findPreset","(string $preset_name)","Get a preset instance from static loader",2],["Loader::findPackage","AssetsManager\\Loader","AssetsManager\/Loader.html#method_findPackage","(string $package_name)","Get a package instance from static loader",2],["Loader::buildWebPath","AssetsManager\\Loader","AssetsManager\/Loader.html#method_buildWebPath","(string $path)","Build a web path ready to use in HTML",2],["Loader::find","AssetsManager\\Loader","AssetsManager\/Loader.html#method_find","(string $filename, string $package = null)","Find an asset file in the filesystem",2],["Loader::findInPackage","AssetsManager\\Loader","AssetsManager\/Loader.html#method_findInPackage","(string $filename, string $package)","Find an asset file in the filesystem of a specific",2],["Loader::findInPath","AssetsManager\\Loader","AssetsManager\/Loader.html#method_findInPath","(string $filename, string $path)","Find an asset file in a package's path",2],["Loader::isUrl","AssetsManager\\Loader","AssetsManager\/Loader.html#method_isUrl","(string $str)","Test if a string is a classic url or an url like `\/\/domain.ext\/asset`",2],["AbstractAssetsPackage::__construct","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method___construct","(string $root_dir = null, string $assets_dir = null, string $vendor_dir = null, string $assets_vendor_dir = null)","",2],["AbstractAssetsPackage::setRootDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_setRootDirectory","(string $path)","Set the project root directory absolute path",2],["AbstractAssetsPackage::getRootDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getRootDirectory","()","Get the project root directory absolute path",2],["AbstractAssetsPackage::setAssetsDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_setAssetsDirectory","(string $path)","Set the project's assets directory, relative to `$this->_root_dir`",2],["AbstractAssetsPackage::getAssetsDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getAssetsDirectory","()","Get the project's assets directory, relative to `$this->_root_dir`",2],["AbstractAssetsPackage::setVendorDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_setVendorDirectory","(string $path)","Set the project's vendor directory, relative to `$this->_root_dir`",2],["AbstractAssetsPackage::getVendorDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getVendorDirectory","()","Get the project's vendor directory, relative to `$this->_root_dir`",2],["AbstractAssetsPackage::setAssetsVendorDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_setAssetsVendorDirectory","(string $path)","Set the project's assets vendor directory, relative",2],["AbstractAssetsPackage::getAssetsVendorDirectory","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getAssetsVendorDirectory","()","Get the project's vendor directory, relative to `$this->_root_dir`",2],["AbstractAssetsPackage::getFullPath","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getFullPath","(string $path, string $type = null, bool $out = false)","Get the absolute path in the package",2],["AbstractAssetsPackage::getAssetsRealPath","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getAssetsRealPath","()","Get the assets full path",2],["AbstractAssetsPackage::getVendorRealPath","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getVendorRealPath","()","Get the assets full path",2],["AbstractAssetsPackage::getAssetsVendorRealPath","AssetsManager\\Package\\AbstractAssetsPackage","AssetsManager\/Package\/AbstractAssetsPackage.html#method_getAssetsVendorRealPath","()","Get the assets vendor full path",2],["AssetsPackage::__construct","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method___construct","(string $_root_dir, string $_assets_dir = null, string $_vendor_dir = null, string $_assets_vendor_dir = null)","",2],["AssetsPackage::createFromAssetsLoader","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_createFromAssetsLoader","(<a href=\"AssetsManager\/Loader.html\"><abbr title=\"AssetsManager\\Loader\">Loader<\/abbr><\/a> $loader)","Create a new instance from an `AssetsManager\\Loader`",2],["AssetsPackage::reset","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_reset","()","Reset the package to empty values (except for global",2],["AssetsPackage::__clone","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method___clone","()","Reset the package when clone",2],["AssetsPackage::setName","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_setName","(string $name)","",2],["AssetsPackage::getName","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getName","()","",2],["AssetsPackage::setVersion","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_setVersion","(string $version)","",2],["AssetsPackage::getVersion","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getVersion","()","",2],["AssetsPackage::setRelativePath","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_setRelativePath","(string $path)","",2],["AssetsPackage::getRelativePath","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getRelativePath","()","",2],["AssetsPackage::setAssetsPath","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_setAssetsPath","(string $path)","",2],["AssetsPackage::getAssetsPath","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getAssetsPath","()","",2],["AssetsPackage::setAssetsPresets","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_setAssetsPresets","(array $presets)","",2],["AssetsPackage::addAssetsPreset","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_addAssetsPreset","(string $preset_name, array $preset)","",2],["AssetsPackage::getAssetsPresets","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getAssetsPresets","()","",2],["AssetsPackage::getAssetsPreset","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getAssetsPreset","(string $preset_name)","",2],["AssetsPackage::getRelativeFullPath","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getRelativeFullPath","(string $path)","Get the relative path in the package",2],["AssetsPackage::getArray","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_getArray","()","Get all necessary arranged package infos as an array",2],["AssetsPackage::loadFromArray","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_loadFromArray","(array $entries)","Load a new package from the `ASSETS_DB_FILENAME` entry",2],["AssetsPackage::findInPackage","AssetsManager\\Package\\AssetsPackage","AssetsManager\/Package\/AssetsPackage.html#method_findInPackage","(string $filename)","Find an asset file in the filesystem of a specific",2],["AssetsPackageInterface::__construct","AssetsManager\\Package\\AssetsPackageInterface","AssetsManager\/Package\/AssetsPackageInterface.html#method___construct","(string $_root_dir, string $_assets_dir = null, string $_vendor_dir = null, string $_assets_vendor_dir = null)","",2],["AssetsPackageInterface::createFromAssetsLoader","AssetsManager\\Package\\AssetsPackageInterface","AssetsManager\/Package\/AssetsPackageInterface.html#method_createFromAssetsLoader","(<abbr title=\"AssetsManager\\Package\\AssetsManager\\Loader\">Loader<\/abbr> $loader)","Create a new instance from an `AssetsManager\\Loader`",2],["AssetsPackageInterface::loadFromArray","AssetsManager\\Package\\AssetsPackageInterface","AssetsManager\/Package\/AssetsPackageInterface.html#method_loadFromArray","(array $entries)","Load a new package from the `ASSETS_DB_FILENAME` entry",2],["AssetsPresetInterface::__construct","AssetsManager\\Package\\AssetsPresetInterface","AssetsManager\/Package\/AssetsPresetInterface.html#method___construct","(string $preset_name, array $preset_data, <abbr title=\"AssetsManager\\Package\\AssetsManager\\Package\\AssetsPackageInterface\">AssetsPackageInterface<\/abbr> $package)","",2],["AssetsPresetInterface::getStatements","AssetsManager\\Package\\AssetsPresetInterface","AssetsManager\/Package\/AssetsPresetInterface.html#method_getStatements","()","",2],["AssetsPresetInterface::getStatement","AssetsManager\\Package\\AssetsPresetInterface","AssetsManager\/Package\/AssetsPresetInterface.html#method_getStatement","(string $name)","",2],["AssetsPresetInterface::__toHtml","AssetsManager\\Package\\AssetsPresetInterface","AssetsManager\/Package\/AssetsPresetInterface.html#method___toHtml","()","",2],["Preset::__construct","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method___construct","(string $preset_name, array $preset_data, <a href=\"AssetsManager\/Package\/AssetsPackageInterface.html\"><abbr title=\"AssetsManager\\Package\\AssetsPackageInterface\">AssetsPackageInterface<\/abbr><\/a> $package)","",2],["Preset::findInPackage","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_findInPackage","(string $path)","Parse and load an assets file in a template object",2],["Preset::load","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_load","()","Automatic assets loading from an Assets package declare",2],["Preset::__toHtml","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method___toHtml","()","",2],["Preset::setName","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_setName","(string $name)","",2],["Preset::getName","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_getName","()","",2],["Preset::setData","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_setData","(array $data)","",2],["Preset::getData","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_getData","()","",2],["Preset::setPackage","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_setPackage","(<a href=\"AssetsManager\/Package\/AssetsPackage.html\"><abbr title=\"AssetsManager\\Package\\AssetsPackage\">AssetsPackage<\/abbr><\/a> $package)","",2],["Preset::getPackage","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_getPackage","()","",2],["Preset::getStatements","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_getStatements","()","",2],["Preset::getStatement","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_getStatement","(string $name)","",2],["Preset::getOrganizedStatements","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_getOrganizedStatements","()","",2],["Preset::getOrderedStatements","AssetsManager\\Package\\Preset","AssetsManager\/Package\/Preset.html#method_getOrderedStatements","(array $statements)","",2],["PresetAdapterInterface::__construct","AssetsManager\\Package\\PresetAdapterInterface","AssetsManager\/Package\/PresetAdapterInterface.html#method___construct","(array $data, <abbr title=\"AssetsManager\\Package\\AssetsManager\\Package\\AssetsPresetInterface\">AssetsPresetInterface<\/abbr> $preset)","",2],["PresetAdapterInterface::getData","AssetsManager\\Package\\PresetAdapterInterface","AssetsManager\/Package\/PresetAdapterInterface.html#method_getData","()","Return the parsed and transformed statement array",2],["PresetAdapterInterface::parse","AssetsManager\\Package\\PresetAdapterInterface","AssetsManager\/Package\/PresetAdapterInterface.html#method_parse","()","Parse and transform the preset statement to a ready-to-use",2],["PresetAdapterInterface::__toString","AssetsManager\\Package\\PresetAdapterInterface","AssetsManager\/Package\/PresetAdapterInterface.html#method___toString","()","Returns the transformed info of the preset statement",2],["PresetAdapterInterface::__toHtml","AssetsManager\\Package\\PresetAdapterInterface","AssetsManager\/Package\/PresetAdapterInterface.html#method___toHtml","()","Returns the transformed info of the preset statement",2],["Css::__construct","AssetsManager\\Package\\PresetAdapter\\Css","AssetsManager\/Package\/PresetAdapter\/Css.html#method___construct","(array $data, <a href=\"AssetsManager\/Package\/AssetsPresetInterface.html\"><abbr title=\"AssetsManager\\Package\\AssetsPresetInterface\">AssetsPresetInterface<\/abbr><\/a> $preset)","",2],["Css::getData","AssetsManager\\Package\\PresetAdapter\\Css","AssetsManager\/Package\/PresetAdapter\/Css.html#method_getData","()","Return the parsed and transformed statement array",2],["Css::parse","AssetsManager\\Package\\PresetAdapter\\Css","AssetsManager\/Package\/PresetAdapter\/Css.html#method_parse","()","Parse and tranform the preset statement to a ready-to-use",2],["Css::__toString","AssetsManager\\Package\\PresetAdapter\\Css","AssetsManager\/Package\/PresetAdapter\/Css.html#method___toString","()","Returns the src path of the preset statement",2],["Css::__toHtml","AssetsManager\\Package\\PresetAdapter\\Css","AssetsManager\/Package\/PresetAdapter\/Css.html#method___toHtml","()","Returns the full HTML `script`",2],["Javascript::__construct","AssetsManager\\Package\\PresetAdapter\\Javascript","AssetsManager\/Package\/PresetAdapter\/Javascript.html#method___construct","(array $data, <a href=\"AssetsManager\/Package\/AssetsPresetInterface.html\"><abbr title=\"AssetsManager\\Package\\AssetsPresetInterface\">AssetsPresetInterface<\/abbr><\/a> $preset)","",2],["Javascript::getData","AssetsManager\\Package\\PresetAdapter\\Javascript","AssetsManager\/Package\/PresetAdapter\/Javascript.html#method_getData","()","Return the parsed and transformed statement array",2],["Javascript::parse","AssetsManager\\Package\\PresetAdapter\\Javascript","AssetsManager\/Package\/PresetAdapter\/Javascript.html#method_parse","()","Parse and tranform the preset statement to a ready-to-use",2],["Javascript::__toString","AssetsManager\\Package\\PresetAdapter\\Javascript","AssetsManager\/Package\/PresetAdapter\/Javascript.html#method___toString","()","Returns the src path of the preset statement",2],["Javascript::__toHtml","AssetsManager\\Package\\PresetAdapter\\Javascript","AssetsManager\/Package\/PresetAdapter\/Javascript.html#method___toHtml","()","Returns the full HTML `script`",2],["Requirement::__construct","AssetsManager\\Package\\PresetAdapter\\Requirement","AssetsManager\/Package\/PresetAdapter\/Requirement.html#method___construct","(array $data, <a href=\"AssetsManager\/Package\/AssetsPresetInterface.html\"><abbr title=\"AssetsManager\\Package\\AssetsPresetInterface\">AssetsPresetInterface<\/abbr><\/a> $preset)","",2],["Requirement::getData","AssetsManager\\Package\\PresetAdapter\\Requirement","AssetsManager\/Package\/PresetAdapter\/Requirement.html#method_getData","()","Return the parsed and transformed statement array",2],["Requirement::parse","AssetsManager\\Package\\PresetAdapter\\Requirement","AssetsManager\/Package\/PresetAdapter\/Requirement.html#method_parse","()","",2],["Requirement::__toString","AssetsManager\\Package\\PresetAdapter\\Requirement","AssetsManager\/Package\/PresetAdapter\/Requirement.html#method___toString","()","Returns the src path of the preset statement",2],["Requirement::__toHtml","AssetsManager\\Package\\PresetAdapter\\Requirement","AssetsManager\/Package\/PresetAdapter\/Requirement.html#method___toHtml","()","Returns the full HTML `script`",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']