(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '    <ul>                <li data-name="namespace:AssetsManager" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager.html">AssetsManager</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="namespace:AssetsManager_Composer" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager/Composer.html">Composer</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="namespace:AssetsManager_Composer_Autoload" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager/Composer/Autoload.html">Autoload</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:AssetsManager_Composer_Autoload_AbstractAssetsAutoloadGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html">AbstractAssetsAutoloadGenerator</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Composer_Autoload_AssetsAutoloadGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Composer/Autoload/AssetsAutoloadGenerator.html">AssetsAutoloadGenerator</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Composer_Autoload_DumpAutoloadEventHandler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html">DumpAutoloadEventHandler</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:AssetsManager_Composer_Installer" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager/Composer/Installer.html">Installer</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:AssetsManager_Composer_Installer_AssetsInstaller" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Composer/Installer/AssetsInstaller.html">AssetsInstaller</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Composer_Installer_AssetsInstallerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Composer/Installer/AssetsInstallerInterface.html">AssetsInstallerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:AssetsManager_Composer_Util" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager/Composer/Util.html">Util</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:AssetsManager_Composer_Util_Filesystem" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Composer/Util/Filesystem.html">Filesystem</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:AssetsManager_Composer_AssetsManagerPlugin" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Composer/AssetsManagerPlugin.html">AssetsManagerPlugin</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Composer_Dispatch" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Composer/Dispatch.html">Dispatch</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:AssetsManager_Config" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager/Config.html">Config</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:AssetsManager_Config_ConfiguratorInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Config/ConfiguratorInterface.html">ConfiguratorInterface</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Config_DefaultConfig" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Config/DefaultConfig.html">DefaultConfig</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:AssetsManager_Package" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager/Package.html">Package</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="namespace:AssetsManager_Package_PresetAdapter" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="AssetsManager/Package/PresetAdapter.html">PresetAdapter</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:AssetsManager_Package_PresetAdapter_Css" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Package/PresetAdapter/Css.html">Css</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Package_PresetAdapter_Javascript" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Package/PresetAdapter/Javascript.html">Javascript</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Package_PresetAdapter_Requirement" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="AssetsManager/Package/PresetAdapter/Requirement.html">Requirement</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:AssetsManager_Package_AbstractAssetsPackage" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Package/AbstractAssetsPackage.html">AbstractAssetsPackage</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Package_AssetsPackage" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Package/AssetsPackage.html">AssetsPackage</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Package_AssetsPackageInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Package/AssetsPackageInterface.html">AssetsPackageInterface</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Package_AssetsPresetInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Package/AssetsPresetInterface.html">AssetsPresetInterface</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Package_Preset" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Package/Preset.html">Preset</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Package_PresetAdapterInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="AssetsManager/Package/PresetAdapterInterface.html">PresetAdapterInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:AssetsManager_Config" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="AssetsManager/Config.html">Config</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Error" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="AssetsManager/Error.html">Error</a>                    </div>                </li>                            <li data-name="class:AssetsManager_Loader" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="AssetsManager/Loader.html">Loader</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    {"type": "Namespace", "link": "AssetsManager.html", "name": "AssetsManager", "doc": "Namespace AssetsManager"},{"type": "Namespace", "link": "AssetsManager/Composer.html", "name": "AssetsManager\\Composer", "doc": "Namespace AssetsManager\\Composer"},{"type": "Namespace", "link": "AssetsManager/Composer/Autoload.html", "name": "AssetsManager\\Composer\\Autoload", "doc": "Namespace AssetsManager\\Composer\\Autoload"},{"type": "Namespace", "link": "AssetsManager/Composer/Installer.html", "name": "AssetsManager\\Composer\\Installer", "doc": "Namespace AssetsManager\\Composer\\Installer"},{"type": "Namespace", "link": "AssetsManager/Composer/Util.html", "name": "AssetsManager\\Composer\\Util", "doc": "Namespace AssetsManager\\Composer\\Util"},{"type": "Namespace", "link": "AssetsManager/Config.html", "name": "AssetsManager\\Config", "doc": "Namespace AssetsManager\\Config"},{"type": "Namespace", "link": "AssetsManager/Package.html", "name": "AssetsManager\\Package", "doc": "Namespace AssetsManager\\Package"},{"type": "Namespace", "link": "AssetsManager/Package/PresetAdapter.html", "name": "AssetsManager\\Package\\PresetAdapter", "doc": "Namespace AssetsManager\\Package\\PresetAdapter"},
            {"type": "Interface", "fromName": "AssetsManager\\Composer\\Installer", "fromLink": "AssetsManager/Composer/Installer.html", "link": "AssetsManager/Composer/Installer/AssetsInstallerInterface.html", "name": "AssetsManager\\Composer\\Installer\\AssetsInstallerInterface", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstallerInterface", "fromLink": "AssetsManager/Composer/Installer/AssetsInstallerInterface.html", "link": "AssetsManager/Composer/Installer/AssetsInstallerInterface.html#method_parseComposerExtra", "name": "AssetsManager\\Composer\\Installer\\AssetsInstallerInterface::parseComposerExtra", "doc": "&quot;Parse the &lt;code&gt;composer.json&lt;\/code&gt; \&quot;extra\&quot; block of a package and return its transformed data&quot;"},
            
            {"type": "Interface", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config/ConfiguratorInterface.html", "name": "AssetsManager\\Config\\ConfiguratorInterface", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Config\\ConfiguratorInterface", "fromLink": "AssetsManager/Config/ConfiguratorInterface.html", "link": "AssetsManager/Config/ConfiguratorInterface.html#method_getDefaults", "name": "AssetsManager\\Config\\ConfiguratorInterface::getDefaults", "doc": "&quot;\n&quot;"},
            
            {"type": "Interface", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/AssetsPackageInterface.html", "name": "AssetsManager\\Package\\AssetsPackageInterface", "doc": "&quot;AssetsPackageInterface&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackageInterface", "fromLink": "AssetsManager/Package/AssetsPackageInterface.html", "link": "AssetsManager/Package/AssetsPackageInterface.html#method___construct", "name": "AssetsManager\\Package\\AssetsPackageInterface::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackageInterface", "fromLink": "AssetsManager/Package/AssetsPackageInterface.html", "link": "AssetsManager/Package/AssetsPackageInterface.html#method_createFromAssetsLoader", "name": "AssetsManager\\Package\\AssetsPackageInterface::createFromAssetsLoader", "doc": "&quot;Create a new instance from an &lt;code&gt;AssetsManager\\Loader&lt;\/code&gt; instance&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackageInterface", "fromLink": "AssetsManager/Package/AssetsPackageInterface.html", "link": "AssetsManager/Package/AssetsPackageInterface.html#method_loadFromArray", "name": "AssetsManager\\Package\\AssetsPackageInterface::loadFromArray", "doc": "&quot;Load a new package from the &lt;code&gt;ASSETS_DB_FILENAME&lt;\/code&gt; entry&quot;"},
            
            {"type": "Interface", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/AssetsPresetInterface.html", "name": "AssetsManager\\Package\\AssetsPresetInterface", "doc": "&quot;AssetsPresetInterface&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method___construct", "name": "AssetsManager\\Package\\AssetsPresetInterface::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method_getStatements", "name": "AssetsManager\\Package\\AssetsPresetInterface::getStatements", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method_getStatement", "name": "AssetsManager\\Package\\AssetsPresetInterface::getStatement", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method___toHtml", "name": "AssetsManager\\Package\\AssetsPresetInterface::__toHtml", "doc": "&quot;\n&quot;"},
            
            {"type": "Interface", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/PresetAdapterInterface.html", "name": "AssetsManager\\Package\\PresetAdapterInterface", "doc": "&quot;PresetAdapterInterface&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method___construct", "name": "AssetsManager\\Package\\PresetAdapterInterface::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method_getData", "name": "AssetsManager\\Package\\PresetAdapterInterface::getData", "doc": "&quot;Return the parsed and transformed statement array&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method_parse", "name": "AssetsManager\\Package\\PresetAdapterInterface::parse", "doc": "&quot;Parse and transform the preset statement to a ready-to-use information&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method___toString", "name": "AssetsManager\\Package\\PresetAdapterInterface::__toString", "doc": "&quot;Returns the transformed info of the preset statement&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method___toHtml", "name": "AssetsManager\\Package\\PresetAdapterInterface::__toHtml", "doc": "&quot;Returns the transformed info of the preset statement as a ready-to-use HTML string&quot;"},
            
            
            {"type": "Class", "fromName": "AssetsManager\\Composer", "fromLink": "AssetsManager/Composer.html", "link": "AssetsManager/Composer/AssetsManagerPlugin.html", "name": "AssetsManager\\Composer\\AssetsManagerPlugin", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\AssetsManagerPlugin", "fromLink": "AssetsManager/Composer/AssetsManagerPlugin.html", "link": "AssetsManager/Composer/AssetsManagerPlugin.html#method_activate", "name": "AssetsManager\\Composer\\AssetsManagerPlugin::activate", "doc": "&quot;Add the &lt;code&gt;\\AssetsManager\\Composer\\Dispatch&lt;\/code&gt; installer&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\AssetsManagerPlugin", "fromLink": "AssetsManager/Composer/AssetsManagerPlugin.html", "link": "AssetsManager/Composer/AssetsManagerPlugin.html#method_getSubscribedEvents", "name": "AssetsManager\\Composer\\AssetsManagerPlugin::getSubscribedEvents", "doc": "&quot;Composer events plugin&#039;s subscription&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\AssetsManagerPlugin", "fromLink": "AssetsManager/Composer/AssetsManagerPlugin.html", "link": "AssetsManager/Composer/AssetsManagerPlugin.html#method_onPreFileDownload", "name": "AssetsManager\\Composer\\AssetsManagerPlugin::onPreFileDownload", "doc": "&quot;Pre file download event dispatcher&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\AssetsManagerPlugin", "fromLink": "AssetsManager/Composer/AssetsManagerPlugin.html", "link": "AssetsManager/Composer/AssetsManagerPlugin.html#method_onCommand", "name": "AssetsManager\\Composer\\AssetsManagerPlugin::onCommand", "doc": "&quot;Command event dispatcher&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Composer\\Autoload", "fromLink": "AssetsManager/Composer/Autoload.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_getInstance", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::getInstance", "doc": "&quot;Get a singleton instance&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method___destruct", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::__destruct", "doc": "&quot;Load the assets database file generation&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_getAssetsInstaller", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::getAssetsInstaller", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_readJsonDatabase", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::readJsonDatabase", "doc": "&quot;Reads the assets database from JSON file&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_writeJsonDatabase", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::writeJsonDatabase", "doc": "&quot;Writes the assets database in a JSON file&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_setRegistry", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::setRegistry", "doc": "&quot;Set the current assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_getRegistry", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::getRegistry", "doc": "&quot;Get the current assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_setGenerator", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::setGenerator", "doc": "&quot;Set the generator called at object destruction&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_registerPackage", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::registerPackage", "doc": "&quot;Add a new installed package in the Assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_unregisterPackage", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::unregisterPackage", "doc": "&quot;Remove an uninstalled package from the Assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AbstractAssetsAutoloadGenerator.html#method_generate", "name": "AssetsManager\\Composer\\Autoload\\AbstractAssetsAutoloadGenerator::generate", "doc": "&quot;This must generate the Assets database JSON file&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Composer\\Autoload", "fromLink": "AssetsManager/Composer/Autoload.html", "link": "AssetsManager/Composer/Autoload/AssetsAutoloadGenerator.html", "name": "AssetsManager\\Composer\\Autoload\\AssetsAutoloadGenerator", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\AssetsAutoloadGenerator", "fromLink": "AssetsManager/Composer/Autoload/AssetsAutoloadGenerator.html", "link": "AssetsManager/Composer/Autoload/AssetsAutoloadGenerator.html#method_generate", "name": "AssetsManager\\Composer\\Autoload\\AssetsAutoloadGenerator::generate", "doc": "&quot;This must generate the Assets database JSON file&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Composer\\Autoload", "fromLink": "AssetsManager/Composer/Autoload.html", "link": "AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html", "name": "AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler", "fromLink": "AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html", "link": "AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html#method___construct", "name": "AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler", "fromLink": "AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html", "link": "AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html#method_generate", "name": "AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler::generate", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler", "fromLink": "AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html", "link": "AssetsManager/Composer/Autoload/DumpAutoloadEventHandler.html#method_getFullDb", "name": "AssetsManager\\Composer\\Autoload\\DumpAutoloadEventHandler::getFullDb", "doc": "&quot;Build the complete database array&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Composer", "fromLink": "AssetsManager/Composer.html", "link": "AssetsManager/Composer/Dispatch.html", "name": "AssetsManager\\Composer\\Dispatch", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method___construct", "name": "AssetsManager\\Composer\\Dispatch::__construct", "doc": "&quot;Initializes installer: creation of all required objects and validating them&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_getComposer", "name": "AssetsManager\\Composer\\Dispatch::getComposer", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_getIo", "name": "AssetsManager\\Composer\\Dispatch::getIo", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_validateConfig", "name": "AssetsManager\\Composer\\Dispatch::validateConfig", "doc": "&quot;Validating the configuration class to use&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_validateInstaller", "name": "AssetsManager\\Composer\\Dispatch::validateInstaller", "doc": "&quot;Validating the installer class to use&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_validateAutoloadGenerator", "name": "AssetsManager\\Composer\\Dispatch::validateAutoloadGenerator", "doc": "&quot;Validating the autoload generator class to use&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_supports", "name": "AssetsManager\\Composer\\Dispatch::supports", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_isInstalled", "name": "AssetsManager\\Composer\\Dispatch::isInstalled", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_install", "name": "AssetsManager\\Composer\\Dispatch::install", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_update", "name": "AssetsManager\\Composer\\Dispatch::update", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_uninstall", "name": "AssetsManager\\Composer\\Dispatch::uninstall", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_getInstallPath", "name": "AssetsManager\\Composer\\Dispatch::getInstallPath", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_setRegistry", "name": "AssetsManager\\Composer\\Dispatch::setRegistry", "doc": "&quot;Set the current assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_getRegistry", "name": "AssetsManager\\Composer\\Dispatch::getRegistry", "doc": "&quot;Get the current assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_setGenerator", "name": "AssetsManager\\Composer\\Dispatch::setGenerator", "doc": "&quot;Set the generator called at object destruction&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_getGenerator", "name": "AssetsManager\\Composer\\Dispatch::getGenerator", "doc": "&quot;Get the generator called at object destruction&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_registerPackage", "name": "AssetsManager\\Composer\\Dispatch::registerPackage", "doc": "&quot;Add a new installed package in the Assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Dispatch", "fromLink": "AssetsManager/Composer/Dispatch.html", "link": "AssetsManager/Composer/Dispatch.html#method_unregisterPackage", "name": "AssetsManager\\Composer\\Dispatch::unregisterPackage", "doc": "&quot;Remove an uninstalled package from the Assets database&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Composer\\Installer", "fromLink": "AssetsManager/Composer/Installer.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method___construct", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::__construct", "doc": "&quot;Initializes installer: creation of &lt;code&gt;assets-dir&lt;\/code&gt; directory if so&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_supports", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::supports", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_isInstalled", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::isInstalled", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_install", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::install", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_update", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::update", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_uninstall", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::uninstall", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getIo", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getIo", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getAppBasePath", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getAppBasePath", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getVendorDir", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getVendorDir", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getAssetsDir", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getAssetsDir", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getAssetsVendorDir", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getAssetsVendorDir", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getDocumentRoot", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getDocumentRoot", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getAssetsDbFilename", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getAssetsDbFilename", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_getAssetsInstallPath", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::getAssetsInstallPath", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_parseComposerExtra", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::parseComposerExtra", "doc": "&quot;Parse the &lt;code&gt;composer.json&lt;\/code&gt; \&quot;extra\&quot; block of a package and return its transformed data&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_guessConfigurationEntry", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::guessConfigurationEntry", "doc": "&quot;Search a configuration value in a package&#039;s config or the global config if so&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstaller", "fromLink": "AssetsManager/Composer/Installer/AssetsInstaller.html", "link": "AssetsManager/Composer/Installer/AssetsInstaller.html#method_isPackageContains", "name": "AssetsManager\\Composer\\Installer\\AssetsInstaller::isPackageContains", "doc": "&quot;Check if a package seems to contain some &lt;code&gt;$type&lt;\/code&gt; files&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Composer\\Installer", "fromLink": "AssetsManager/Composer/Installer.html", "link": "AssetsManager/Composer/Installer/AssetsInstallerInterface.html", "name": "AssetsManager\\Composer\\Installer\\AssetsInstallerInterface", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Installer\\AssetsInstallerInterface", "fromLink": "AssetsManager/Composer/Installer/AssetsInstallerInterface.html", "link": "AssetsManager/Composer/Installer/AssetsInstallerInterface.html#method_parseComposerExtra", "name": "AssetsManager\\Composer\\Installer\\AssetsInstallerInterface::parseComposerExtra", "doc": "&quot;Parse the &lt;code&gt;composer.json&lt;\/code&gt; \&quot;extra\&quot; block of a package and return its transformed data&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Composer\\Util", "fromLink": "AssetsManager/Composer/Util.html", "link": "AssetsManager/Composer/Util/Filesystem.html", "name": "AssetsManager\\Composer\\Util\\Filesystem", "doc": "&quot;This class just completes the default &lt;code&gt;Composer\\Util\\Filesystem&lt;\/code&gt; with a &lt;code&gt;copy&lt;\/code&gt; method&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Composer\\Util\\Filesystem", "fromLink": "AssetsManager/Composer/Util/Filesystem.html", "link": "AssetsManager/Composer/Util/Filesystem.html#method_copy", "name": "AssetsManager\\Composer\\Util\\Filesystem::copy", "doc": "&quot;Exact same code as &lt;code&gt;copyThenRemove()&lt;\/code&gt; method but without removing&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager", "fromLink": "AssetsManager.html", "link": "AssetsManager/Config.html", "name": "AssetsManager\\Config", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_mustLoad", "name": "AssetsManager\\Config::mustLoad", "doc": "&quot;Check if the configurator is not yet loaded&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_load", "name": "AssetsManager\\Config::load", "doc": "&quot;Load a config object&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_overload", "name": "AssetsManager\\Config::overload", "doc": "&quot;Overload a config registry&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_set", "name": "AssetsManager\\Config::set", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_get", "name": "AssetsManager\\Config::get", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_getDefault", "name": "AssetsManager\\Config::getDefault", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_getInternal", "name": "AssetsManager\\Config::getInternal", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config.html#method_getRegistry", "name": "AssetsManager\\Config::getRegistry", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config/ConfiguratorInterface.html", "name": "AssetsManager\\Config\\ConfiguratorInterface", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Config\\ConfiguratorInterface", "fromLink": "AssetsManager/Config/ConfiguratorInterface.html", "link": "AssetsManager/Config/ConfiguratorInterface.html#method_getDefaults", "name": "AssetsManager\\Config\\ConfiguratorInterface::getDefaults", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Config", "fromLink": "AssetsManager/Config.html", "link": "AssetsManager/Config/DefaultConfig.html", "name": "AssetsManager\\Config\\DefaultConfig", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Config\\DefaultConfig", "fromLink": "AssetsManager/Config/DefaultConfig.html", "link": "AssetsManager/Config/DefaultConfig.html#method_getDefaults", "name": "AssetsManager\\Config\\DefaultConfig::getDefaults", "doc": "&quot;The real configuration entries&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager", "fromLink": "AssetsManager.html", "link": "AssetsManager/Error.html", "name": "AssetsManager\\Error", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Error", "fromLink": "AssetsManager/Error.html", "link": "AssetsManager/Error.html#method_thrower", "name": "AssetsManager\\Error::thrower", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager", "fromLink": "AssetsManager.html", "link": "AssetsManager/Loader.html", "name": "AssetsManager\\Loader", "doc": "&quot;Class to manage assets paths&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getInstance", "name": "AssetsManager\\Loader::getInstance", "doc": "&quot;Loader static instance constructor&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method___construct", "name": "AssetsManager\\Loader::__construct", "doc": "&quot;Loader protected constructor, use the class as a Singleton&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_init", "name": "AssetsManager\\Loader::init", "doc": "&quot;Initializing a new loader populating all paths &amp;amp; packages&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_setDocumentRoot", "name": "AssetsManager\\Loader::setDocumentRoot", "doc": "&quot;Set the document root directory&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getDocumentRoot", "name": "AssetsManager\\Loader::getDocumentRoot", "doc": "&quot;Get the document root directory&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_setAssetsDb", "name": "AssetsManager\\Loader::setAssetsDb", "doc": "&quot;Set the package&#039;s assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getAssetsDb", "name": "AssetsManager\\Loader::getAssetsDb", "doc": "&quot;Get the package&#039;s assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getAssetsWebPath", "name": "AssetsManager\\Loader::getAssetsWebPath", "doc": "&quot;Get the web path for assets&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getPackageAssetsPath", "name": "AssetsManager\\Loader::getPackageAssetsPath", "doc": "&quot;Get the assets full path for a specific package&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getPackageAssetsWebPath", "name": "AssetsManager\\Loader::getPackageAssetsWebPath", "doc": "&quot;Get the web path for assets of a specific package&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_hasPackage", "name": "AssetsManager\\Loader::hasPackage", "doc": "&quot;Test if a package exists&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getPackage", "name": "AssetsManager\\Loader::getPackage", "doc": "&quot;Get a package instance&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_validatePresets", "name": "AssetsManager\\Loader::validatePresets", "doc": "&quot;Load and validate all packages presets in one table&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_hasPreset", "name": "AssetsManager\\Loader::hasPreset", "doc": "&quot;Test if a preset exists&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getPreset", "name": "AssetsManager\\Loader::getPreset", "doc": "&quot;Get a preset instance&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_getAssets", "name": "AssetsManager\\Loader::getAssets", "doc": "&quot;Get the package&#039;s assets database&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_findPreset", "name": "AssetsManager\\Loader::findPreset", "doc": "&quot;Get a preset instance from static loader&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_findPackage", "name": "AssetsManager\\Loader::findPackage", "doc": "&quot;Get a package instance from static loader&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_buildWebPath", "name": "AssetsManager\\Loader::buildWebPath", "doc": "&quot;Build a web path ready to use in HTML&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_find", "name": "AssetsManager\\Loader::find", "doc": "&quot;Find an asset file in the filesystem&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_findInPackage", "name": "AssetsManager\\Loader::findInPackage", "doc": "&quot;Find an asset file in the filesystem of a specific package&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_findInPath", "name": "AssetsManager\\Loader::findInPath", "doc": "&quot;Find an asset file in a package&#039;s path&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Loader", "fromLink": "AssetsManager/Loader.html", "link": "AssetsManager/Loader.html#method_isUrl", "name": "AssetsManager\\Loader::isUrl", "doc": "&quot;Test if a string is a classic url or an url like &lt;code&gt;\/\/domain.ext\/asset&lt;\/code&gt;&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html", "name": "AssetsManager\\Package\\AbstractAssetsPackage", "doc": "&quot;Class to manage assets paths&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method___construct", "name": "AssetsManager\\Package\\AbstractAssetsPackage::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_setRootDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::setRootDirectory", "doc": "&quot;Set the project root directory absolute path&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getRootDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getRootDirectory", "doc": "&quot;Get the project root directory absolute path&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_setAssetsDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::setAssetsDirectory", "doc": "&quot;Set the project&#039;s assets directory, relative to &lt;code&gt;$this-&amp;gt;_root_dir&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getAssetsDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getAssetsDirectory", "doc": "&quot;Get the project&#039;s assets directory, relative to &lt;code&gt;$this-&amp;gt;_root_dir&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_setVendorDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::setVendorDirectory", "doc": "&quot;Set the project&#039;s vendor directory, relative to &lt;code&gt;$this-&amp;gt;_root_dir&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getVendorDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getVendorDirectory", "doc": "&quot;Get the project&#039;s vendor directory, relative to &lt;code&gt;$this-&amp;gt;_root_dir&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_setAssetsVendorDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::setAssetsVendorDirectory", "doc": "&quot;Set the project&#039;s assets vendor directory, relative to &lt;code&gt;$this-&amp;gt;_assets_dir&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getAssetsVendorDirectory", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getAssetsVendorDirectory", "doc": "&quot;Get the project&#039;s vendor directory, relative to &lt;code&gt;$this-&amp;gt;_root_dir&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getFullPath", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getFullPath", "doc": "&quot;Get the absolute path in the package&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getAssetsRealPath", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getAssetsRealPath", "doc": "&quot;Get the assets full path&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getVendorRealPath", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getVendorRealPath", "doc": "&quot;Get the assets full path&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AbstractAssetsPackage", "fromLink": "AssetsManager/Package/AbstractAssetsPackage.html", "link": "AssetsManager/Package/AbstractAssetsPackage.html#method_getAssetsVendorRealPath", "name": "AssetsManager\\Package\\AbstractAssetsPackage::getAssetsVendorRealPath", "doc": "&quot;Get the assets vendor full path&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/AssetsPackage.html", "name": "AssetsManager\\Package\\AssetsPackage", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method___construct", "name": "AssetsManager\\Package\\AssetsPackage::__construct", "doc": "&quot;Construction&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_createFromAssetsLoader", "name": "AssetsManager\\Package\\AssetsPackage::createFromAssetsLoader", "doc": "&quot;Create a new instance from an &lt;code&gt;AssetsManager\\Loader&lt;\/code&gt; instance&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_reset", "name": "AssetsManager\\Package\\AssetsPackage::reset", "doc": "&quot;Reset the package to empty values (except for global package)&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method___clone", "name": "AssetsManager\\Package\\AssetsPackage::__clone", "doc": "&quot;Reset the package when clone&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_setName", "name": "AssetsManager\\Package\\AssetsPackage::setName", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getName", "name": "AssetsManager\\Package\\AssetsPackage::getName", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_setVersion", "name": "AssetsManager\\Package\\AssetsPackage::setVersion", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getVersion", "name": "AssetsManager\\Package\\AssetsPackage::getVersion", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_setRelativePath", "name": "AssetsManager\\Package\\AssetsPackage::setRelativePath", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getRelativePath", "name": "AssetsManager\\Package\\AssetsPackage::getRelativePath", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_setAssetsPath", "name": "AssetsManager\\Package\\AssetsPackage::setAssetsPath", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getAssetsPath", "name": "AssetsManager\\Package\\AssetsPackage::getAssetsPath", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_setAssetsPresets", "name": "AssetsManager\\Package\\AssetsPackage::setAssetsPresets", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_addAssetsPreset", "name": "AssetsManager\\Package\\AssetsPackage::addAssetsPreset", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getAssetsPresets", "name": "AssetsManager\\Package\\AssetsPackage::getAssetsPresets", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getAssetsPreset", "name": "AssetsManager\\Package\\AssetsPackage::getAssetsPreset", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getRelativeFullPath", "name": "AssetsManager\\Package\\AssetsPackage::getRelativeFullPath", "doc": "&quot;Get the relative path in the package&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_getArray", "name": "AssetsManager\\Package\\AssetsPackage::getArray", "doc": "&quot;Get all necessary arranged package infos as an array&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_loadFromArray", "name": "AssetsManager\\Package\\AssetsPackage::loadFromArray", "doc": "&quot;Load a new package from the &lt;code&gt;ASSETS_DB_FILENAME&lt;\/code&gt; entry&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_findInPackage", "name": "AssetsManager\\Package\\AssetsPackage::findInPackage", "doc": "&quot;Find an asset file in the filesystem of a specific package&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackage", "fromLink": "AssetsManager/Package/AssetsPackage.html", "link": "AssetsManager/Package/AssetsPackage.html#method_find", "name": "AssetsManager\\Package\\AssetsPackage::find", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/AssetsPackageInterface.html", "name": "AssetsManager\\Package\\AssetsPackageInterface", "doc": "&quot;AssetsPackageInterface&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackageInterface", "fromLink": "AssetsManager/Package/AssetsPackageInterface.html", "link": "AssetsManager/Package/AssetsPackageInterface.html#method___construct", "name": "AssetsManager\\Package\\AssetsPackageInterface::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackageInterface", "fromLink": "AssetsManager/Package/AssetsPackageInterface.html", "link": "AssetsManager/Package/AssetsPackageInterface.html#method_createFromAssetsLoader", "name": "AssetsManager\\Package\\AssetsPackageInterface::createFromAssetsLoader", "doc": "&quot;Create a new instance from an &lt;code&gt;AssetsManager\\Loader&lt;\/code&gt; instance&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPackageInterface", "fromLink": "AssetsManager/Package/AssetsPackageInterface.html", "link": "AssetsManager/Package/AssetsPackageInterface.html#method_loadFromArray", "name": "AssetsManager\\Package\\AssetsPackageInterface::loadFromArray", "doc": "&quot;Load a new package from the &lt;code&gt;ASSETS_DB_FILENAME&lt;\/code&gt; entry&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/AssetsPresetInterface.html", "name": "AssetsManager\\Package\\AssetsPresetInterface", "doc": "&quot;AssetsPresetInterface&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method___construct", "name": "AssetsManager\\Package\\AssetsPresetInterface::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method_getStatements", "name": "AssetsManager\\Package\\AssetsPresetInterface::getStatements", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method_getStatement", "name": "AssetsManager\\Package\\AssetsPresetInterface::getStatement", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\AssetsPresetInterface", "fromLink": "AssetsManager/Package/AssetsPresetInterface.html", "link": "AssetsManager/Package/AssetsPresetInterface.html#method___toHtml", "name": "AssetsManager\\Package\\AssetsPresetInterface::__toHtml", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/Preset.html", "name": "AssetsManager\\Package\\Preset", "doc": "&quot;Preset&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method___construct", "name": "AssetsManager\\Package\\Preset::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_findInPackage", "name": "AssetsManager\\Package\\Preset::findInPackage", "doc": "&quot;Parse and load an assets file in a template object&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_load", "name": "AssetsManager\\Package\\Preset::load", "doc": "&quot;Automatic assets loading from an Assets package declare in a &lt;code&gt;composer.json&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method___toHtml", "name": "AssetsManager\\Package\\Preset::__toHtml", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_setName", "name": "AssetsManager\\Package\\Preset::setName", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_getName", "name": "AssetsManager\\Package\\Preset::getName", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_setData", "name": "AssetsManager\\Package\\Preset::setData", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_getData", "name": "AssetsManager\\Package\\Preset::getData", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_setPackage", "name": "AssetsManager\\Package\\Preset::setPackage", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_getPackage", "name": "AssetsManager\\Package\\Preset::getPackage", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_getStatements", "name": "AssetsManager\\Package\\Preset::getStatements", "doc": "&quot;Get the preset&#039;s statements array&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_getStatement", "name": "AssetsManager\\Package\\Preset::getStatement", "doc": "&quot;Get one preset&#039;s statement entry&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_getOrganizedStatements", "name": "AssetsManager\\Package\\Preset::getOrganizedStatements", "doc": "&quot;Organize each statements item by position &amp;amp; requirements&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\Preset", "fromLink": "AssetsManager/Package/Preset.html", "link": "AssetsManager/Package/Preset.html#method_getOrderedStatements", "name": "AssetsManager\\Package\\Preset::getOrderedStatements", "doc": "&quot;Internal function to order a statements stack&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package", "fromLink": "AssetsManager/Package.html", "link": "AssetsManager/Package/PresetAdapterInterface.html", "name": "AssetsManager\\Package\\PresetAdapterInterface", "doc": "&quot;PresetAdapterInterface&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method___construct", "name": "AssetsManager\\Package\\PresetAdapterInterface::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method_getData", "name": "AssetsManager\\Package\\PresetAdapterInterface::getData", "doc": "&quot;Return the parsed and transformed statement array&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method_parse", "name": "AssetsManager\\Package\\PresetAdapterInterface::parse", "doc": "&quot;Parse and transform the preset statement to a ready-to-use information&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method___toString", "name": "AssetsManager\\Package\\PresetAdapterInterface::__toString", "doc": "&quot;Returns the transformed info of the preset statement&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapterInterface", "fromLink": "AssetsManager/Package/PresetAdapterInterface.html", "link": "AssetsManager/Package/PresetAdapterInterface.html#method___toHtml", "name": "AssetsManager\\Package\\PresetAdapterInterface::__toHtml", "doc": "&quot;Returns the transformed info of the preset statement as a ready-to-use HTML string&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package\\PresetAdapter", "fromLink": "AssetsManager/Package/PresetAdapter.html", "link": "AssetsManager/Package/PresetAdapter/Css.html", "name": "AssetsManager\\Package\\PresetAdapter\\Css", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Css", "fromLink": "AssetsManager/Package/PresetAdapter/Css.html", "link": "AssetsManager/Package/PresetAdapter/Css.html#method___construct", "name": "AssetsManager\\Package\\PresetAdapter\\Css::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Css", "fromLink": "AssetsManager/Package/PresetAdapter/Css.html", "link": "AssetsManager/Package/PresetAdapter/Css.html#method_getData", "name": "AssetsManager\\Package\\PresetAdapter\\Css::getData", "doc": "&quot;Return the parsed and transformed statement array&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Css", "fromLink": "AssetsManager/Package/PresetAdapter/Css.html", "link": "AssetsManager/Package/PresetAdapter/Css.html#method_parse", "name": "AssetsManager\\Package\\PresetAdapter\\Css::parse", "doc": "&quot;Parse and transform the preset statement to a ready-to-use information&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Css", "fromLink": "AssetsManager/Package/PresetAdapter/Css.html", "link": "AssetsManager/Package/PresetAdapter/Css.html#method___toString", "name": "AssetsManager\\Package\\PresetAdapter\\Css::__toString", "doc": "&quot;Returns the src path of the preset statement&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Css", "fromLink": "AssetsManager/Package/PresetAdapter/Css.html", "link": "AssetsManager/Package/PresetAdapter/Css.html#method___toHtml", "name": "AssetsManager\\Package\\PresetAdapter\\Css::__toHtml", "doc": "&quot;Returns the full HTML &lt;code&gt;script&lt;\/code&gt;&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package\\PresetAdapter", "fromLink": "AssetsManager/Package/PresetAdapter.html", "link": "AssetsManager/Package/PresetAdapter/Javascript.html", "name": "AssetsManager\\Package\\PresetAdapter\\Javascript", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Javascript", "fromLink": "AssetsManager/Package/PresetAdapter/Javascript.html", "link": "AssetsManager/Package/PresetAdapter/Javascript.html#method___construct", "name": "AssetsManager\\Package\\PresetAdapter\\Javascript::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Javascript", "fromLink": "AssetsManager/Package/PresetAdapter/Javascript.html", "link": "AssetsManager/Package/PresetAdapter/Javascript.html#method_getData", "name": "AssetsManager\\Package\\PresetAdapter\\Javascript::getData", "doc": "&quot;Return the parsed and transformed statement array&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Javascript", "fromLink": "AssetsManager/Package/PresetAdapter/Javascript.html", "link": "AssetsManager/Package/PresetAdapter/Javascript.html#method_parse", "name": "AssetsManager\\Package\\PresetAdapter\\Javascript::parse", "doc": "&quot;Parse and transform the preset statement to a ready-to-use information&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Javascript", "fromLink": "AssetsManager/Package/PresetAdapter/Javascript.html", "link": "AssetsManager/Package/PresetAdapter/Javascript.html#method___toString", "name": "AssetsManager\\Package\\PresetAdapter\\Javascript::__toString", "doc": "&quot;Returns the src path of the preset statement&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Javascript", "fromLink": "AssetsManager/Package/PresetAdapter/Javascript.html", "link": "AssetsManager/Package/PresetAdapter/Javascript.html#method___toHtml", "name": "AssetsManager\\Package\\PresetAdapter\\Javascript::__toHtml", "doc": "&quot;Returns the full HTML &lt;code&gt;script&lt;\/code&gt;&quot;"},
            
            {"type": "Class", "fromName": "AssetsManager\\Package\\PresetAdapter", "fromLink": "AssetsManager/Package/PresetAdapter.html", "link": "AssetsManager/Package/PresetAdapter/Requirement.html", "name": "AssetsManager\\Package\\PresetAdapter\\Requirement", "doc": "&quot;\n&quot;"},
                                                        {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Requirement", "fromLink": "AssetsManager/Package/PresetAdapter/Requirement.html", "link": "AssetsManager/Package/PresetAdapter/Requirement.html#method___construct", "name": "AssetsManager\\Package\\PresetAdapter\\Requirement::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Requirement", "fromLink": "AssetsManager/Package/PresetAdapter/Requirement.html", "link": "AssetsManager/Package/PresetAdapter/Requirement.html#method_getData", "name": "AssetsManager\\Package\\PresetAdapter\\Requirement::getData", "doc": "&quot;Return the parsed and transformed statement array&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Requirement", "fromLink": "AssetsManager/Package/PresetAdapter/Requirement.html", "link": "AssetsManager/Package/PresetAdapter/Requirement.html#method_parse", "name": "AssetsManager\\Package\\PresetAdapter\\Requirement::parse", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Requirement", "fromLink": "AssetsManager/Package/PresetAdapter/Requirement.html", "link": "AssetsManager/Package/PresetAdapter/Requirement.html#method___toString", "name": "AssetsManager\\Package\\PresetAdapter\\Requirement::__toString", "doc": "&quot;Returns the src path of the preset statement&quot;"},
                    {"type": "Method", "fromName": "AssetsManager\\Package\\PresetAdapter\\Requirement", "fromLink": "AssetsManager/Package/PresetAdapter/Requirement.html", "link": "AssetsManager/Package/PresetAdapter/Requirement.html#method___toHtml", "name": "AssetsManager\\Package\\PresetAdapter\\Requirement::__toHtml", "doc": "&quot;Returns the full HTML &lt;code&gt;script&lt;\/code&gt;&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


